[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "youtube-highlighter"
version = "2.0.0"
description = "Generate video highlights from YouTube transcripts using AI and keyword detection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "YouTube Highlighter Team", email = "noreply@example.com"}
]
maintainers = [
    {name = "YouTube Highlighter Team", email = "noreply@example.com"}
]
keywords = ["youtube", "video", "highlights", "ai", "transcripts", "summarization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Content Creators", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.8"
dependencies = [
    "moviepy==1.0.3",
    "pytube>=15.0.0",
    "torch>=2.0.0", 
    "transformers>=4.0.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "requests>=2.25.0",
    "beautifulsoup4>=4.10.0",
    "yt-dlp>=2023.1.0",
    "openai-whisper>=20230918",
    "pyyaml>=6.0",
    "typer>=0.9.0",
    "Flask>=2.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]

[project.urls]
"Homepage" = "https://github.com/yourusername/youtube-highlighter"
"Bug Tracker" = "https://github.com/yourusername/youtube-highlighter/issues"
"Documentation" = "https://github.com/yourusername/youtube-highlighter#readme"
"Source Code" = "https://github.com/yourusername/youtube-highlighter"

[project.scripts]
youtube-highlighter = "app.cli:app"
yt-highlights = "app.cli:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"app.web" = ["templates/*.html"]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["app"]
skip_glob = ["*/migrations/*"]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache", 
    "venv",
    "build",
    "dist",
    "migrations"
]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = [
    "venv/",
    "build/",
    "dist/"
]